// <auto-generated />
using System;
using HW2.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HW2.Data.Migrations
{
    [DbContext(typeof(HW2Context))]
    partial class HW2ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HW2.Data.Domain.Account", b =>
                {
                    b.Property<int>("AccountNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("Balance")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasDefaultValue(0m);

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("OpenDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AccountNumber");

                    b.HasIndex("AccountNumber")
                        .IsUnique();

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            AccountNumber = 10001,
                            Balance = 1500m,
                            CurrencyCode = "TRY",
                            InsertDate = new DateTime(2023, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InsertUser = "SystemAdmin",
                            IsActive = true,
                            Name = "John",
                            OpenDate = new DateTime(2010, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AccountNumber = 10002,
                            Balance = 2500m,
                            CurrencyCode = "TRY",
                            InsertDate = new DateTime(2023, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InsertUser = "SystemAdmin",
                            IsActive = true,
                            Name = "Jeyn",
                            OpenDate = new DateTime(2023, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AccountNumber = 10003,
                            Balance = 5200m,
                            CurrencyCode = "TRY",
                            InsertDate = new DateTime(2023, 10, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InsertUser = "SystemAdmin",
                            IsActive = true,
                            Name = "Tom",
                            OpenDate = new DateTime(2020, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HW2.Data.Domain.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccountNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("CreditAmount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("DebitAmount")
                        .HasMaxLength(0)
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountNumber");

                    b.HasIndex("ReferenceNumber");

                    b.ToTable("Transaction");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountNumber = 10001,
                            CreditAmount = 10000m,
                            DebitAmount = 20000m,
                            Description = "EFT",
                            InsertDate = new DateTime(2019, 5, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InsertUser = "User",
                            ReferenceNumber = "20020",
                            TransactionDate = new DateTime(2022, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AccountNumber = 10001,
                            CreditAmount = 5000m,
                            DebitAmount = 25000m,
                            Description = "EFT",
                            InsertDate = new DateTime(2019, 7, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InsertUser = "User",
                            ReferenceNumber = "20050",
                            TransactionDate = new DateTime(2021, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            AccountNumber = 10002,
                            CreditAmount = 12000m,
                            DebitAmount = 10000m,
                            Description = "EFT",
                            InsertDate = new DateTime(2019, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InsertUser = "User",
                            ReferenceNumber = "20150",
                            TransactionDate = new DateTime(2020, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HW2.Data.Domain.Transaction", b =>
                {
                    b.HasOne("HW2.Data.Domain.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("HW2.Data.Domain.Account", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
